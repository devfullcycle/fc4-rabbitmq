/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import com.rabbitmq.stream.*;

public class SuperProducerBatchApplication {

    public static void main(String[] args) throws Exception {

        Environment env = Environment.builder()
                .uri("rabbitmq-stream://admin:admin@rabbitmq-node1:5552")
                .build();

        // assercao/declaracao da fila
        env.streamCreator()
                .stream("test-super-stream")
                .superStream()
                .partitions(3)
                //.bindingKeys("key1", "key2", "key3")
                .creator()
                .create();

        // //producer
        // Producer producer = env.producerBuilder().stream("test-stream").build();

        // int messageCount = 10;

        // CountDownLatch publishConfirmLatch = new CountDownLatch(messageCount);

        // IntStream.range(0, messageCount).forEach(i -> {
        // //definição da mensagem
        // Message message = producer
        // .messageBuilder()
        // .addData(("Hello World " + i + "!").getBytes()).build();
        // producer.send(message, confirmStatus -> {
        // if(confirmStatus.isConfirmed()){
        // System.out.println("Message " + i + " sent successfully!");
        // } else {
        // System.out.println("Message " + i + " sending failed: " +
        // confirmStatus.getMessage());
        // }
        // publishConfirmLatch.countDown();
        // });
        // });

        // publishConfirmLatch.await(10, TimeUnit.SECONDS);

        // producer.close();

        env.close();
    }
}
